<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS.dao.BoardDAO">
	<select id="getBoardList" resultType="com.spring.javaProjectS.vo.BoardVO">
		<!-- select * from board2 order by idx desc limit #{startIndexNo}, #{pageSize}; -->
		select *,datediff(wDate, now()) as date_diff,
			timestampdiff(hour, wDate, now()) as hour_diff,
			(select count(*) from board2Reply where boardIdx = b.idx) as replyCnt 
			from board2 b order by idx desc limit #{startIndexNo}, #{pageSize};
	</select>
	<insert id="setBoardInput">
		insert into board2 values (default,#{vo.mid},#{vo.nickName},#{vo.email},#{vo.homePage},#{vo.title},#{vo.content},default,#{vo.hostIp},#{vo.openSw},default,default);
	</insert>
	<select id="getBoardContent" resultType="com.spring.javaProjectS.vo.BoardVO">
		select * from board2 where idx = #{idx};
	</select>
	<update id="setReadNumPlus">
		update board2 set readNum = readNum + 1 where idx = #{idx};
	</update>
	
	<select id="totRecCnt" resultType="int">
		select count(*) from board2;
	</select>
	<!-- 외부변수는 ${} 로 표기, param으로 넘어 온 변수는 #{} 로 표기 -->
	<select id="totRecCntSearch" resultType="int">
		select count(*) from board2 where ${search} like concat('%',#{searchString},'%');
	</select>
	<select id="getBoardSearchList" resultType="com.spring.javaProjectS.vo.BoardVO">
		select * from board2 where ${search} like concat('%',#{searchString},'%') order by idx desc limit #{startIndexNo}, #{pageSize}; 
	</select>

	<!-- <![CDATA[]]> : 부등호를 쓰고 싶은데 태그 등으로 인식할 경우 일반 연산자로 처리하고 싶을 때 사용하는 태그 -->
	<select id="getPreNextSearch" resultType="com.spring.javaProjectS.vo.BoardVO">
		<if test = "str == 'preVO'">
			select idx, title from board2 where <![CDATA[idx < #{idx}]]> order by idx desc limit 1;
		</if>
		<if test = "str == 'nextVO'">
			select idx, title from board2 where <![CDATA[idx > #{idx}]]> order by idx limit 1;
		</if>
	</select>
	
	<update id="setBoardUpdate">
		update board2 set nickName=#{vo.nickName},title=#{vo.title},email=#{vo.email},homePage=#{vo.homePage},content=#{vo.content},hostIp=#{vo.hostIp},openSw=#{vo.openSw},wDate=now() where idx=#{vo.idx};
	</update>
	<delete id="setBoardDelete">
		delete from board2 where idx = #{idx};
	</delete>
	
	<select id="getBoardReplySearch" resultType="com.spring.javaProjectS.vo.BoardReplyVO">
		select * from board2Reply where boardIdx = #{boardIdx} order by idx desc limit 1;
	</select>
	<insert id="setBoardReplyInput">
		insert into board2Reply values (default,#{replyVO.boardIdx},#{replyVO.re_step},#{replyVO.re_order},#{replyVO.mid},#{replyVO.nickName},#{replyVO.wDate},#{replyVO.hostIp},#{replyVO.content});
	</insert>
	<select id="getBoardReplyList" resultType="com.spring.javaProjectS.vo.BoardReplyVO">
		select * from board2Reply where boardIdx = #{idx} order by re_order;
	</select>
	<update id="setRe_orderUpdate">
		update board2Reply set re_order = re_order + 1 where boardIdx = #{boardIdx} and re_order > #{re_order};
	</update>
	
	
</mapper>